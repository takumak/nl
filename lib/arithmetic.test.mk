# License: MIT

test-arithmetic:
	@echo -n '$@ '

	$(call test1,get-tail-digit,123,3)
	$(call test1,strip-tail-digit,123,12)

	$(call test1,is-negative,-1,t)
	$(call test1,is-negative,1,)
	$(call test1,negative,1,-1)
	$(call test1,negative,-1,1)
	$(call test1,negative,0,0)

	$(call test1,encode,0,)
	$(call test1,encode,3,x x x)
	$(call test1,encode,12,x x x x x x x x x x x x)

	$(call test2,gt,4,3,t)
	$(call test2,gt,4,4,)
	$(call test2,gt,4,5,)
	$(call test2,gt,-4,-3,)
	$(call test2,gt,-4,-4,)
	$(call test2,gt,-4,-5,t)
	$(call test2,gt,0,-1,t)
	$(call test2,gt,0,0,)
	$(call test2,gt,0,1,)
	$(call test2,gt,-1,0,)
	$(call test2,gt,0,0,)
	$(call test2,gt,1,0,t)

	$(call test2,ge,4,3,t)
	$(call test2,ge,4,4,t)
	$(call test2,ge,4,5,)
	$(call test2,ge,-4,-3,)
	$(call test2,ge,-4,-4,t)
	$(call test2,ge,-4,-5,t)
	$(call test2,ge,0,-1,t)
	$(call test2,ge,0,0,t)
	$(call test2,ge,0,1,)
	$(call test2,ge,-1,0,)
	$(call test2,ge,0,0,t)
	$(call test2,ge,1,0,t)

	$(call test2,lt,4,3,)
	$(call test2,lt,4,4,)
	$(call test2,lt,4,5,t)
	$(call test2,lt,-4,-3,t)
	$(call test2,lt,-4,-4,)
	$(call test2,lt,-4,-5,)
	$(call test2,lt,0,-1,)
	$(call test2,lt,0,0,)
	$(call test2,lt,0,1,t)
	$(call test2,lt,-1,0,t)
	$(call test2,lt,0,0,)
	$(call test2,lt,1,0,)

	$(call test2,le,4,3,)
	$(call test2,le,4,4,t)
	$(call test2,le,4,5,t)
	$(call test2,le,-4,-3,t)
	$(call test2,le,-4,-4,t)
	$(call test2,le,-4,-5,)
	$(call test2,le,0,-1,)
	$(call test2,le,0,0,t)
	$(call test2,le,0,1,t)
	$(call test2,le,-1,0,t)
	$(call test2,le,0,0,t)
	$(call test2,le,1,0,)

	$(call test2,add,0,0,0)
	$(call test2,add,0,1,1)
	$(call test2,add,0,-1,-1)
	$(call test2,add,1,0,1)
	$(call test2,add,1,1,2)
	$(call test2,add,1,-1,0)
	$(call test2,add,1,-2,-1)
	$(call test2,add,-1,0,-1)
	$(call test2,add,-1,1,0)
	$(call test2,add,-1,2,1)
	$(call test2,add,-1,-1,-2)

	$(call test2,sub,0,0,0)
	$(call test2,sub,0,1,-1)
	$(call test2,sub,0,-1,1)
	$(call test2,sub,1,0,1)
	$(call test2,sub,1,1,0)
	$(call test2,sub,1,-1,2)
	$(call test2,sub,1,2,-1)
	$(call test2,sub,-1,0,-1)
	$(call test2,sub,-1,1,-2)
	$(call test2,sub,-1,-1,0)
	$(call test2,sub,-1,-2,1)

	$(call test2,mul,2,0,0)
	$(call test2,mul,2,1,2)
	$(call test2,mul,2,3,6)
	$(call test2,mul,2,-1,-2)
	$(call test2,mul,2,-3,-6)

	$(call test2,mul,-2,0,0)
	$(call test2,mul,-2,1,-2)
	$(call test2,mul,-2,3,-6)
	$(call test2,mul,-2,-1,2)
	$(call test2,mul,-2,-3,6)

	$(call test2,mul,0,0,0)
	$(call test2,mul,0,1,0)
	$(call test2,mul,0,3,0)
	$(call test2,mul,0,-1,0)
	$(call test2,mul,0,-3,0)

	$(call test2,div,0,0,DIV0)
	$(call test2,div,1,0,DIV0)
	$(call test2,div,-1,0,DIV0)
	$(call test2,div,0,1,0)
	$(call test2,div,1,1,1)
	$(call test2,div,1,2,0)
	$(call test2,div,-1,1,-1)
	$(call test2,div,-1,-2,0)
	$(call test2,div,10,3,3)
	$(call test2,div,10,-3,-3)
	$(call test2,div,-10,3,-3)
	$(call test2,div,-10,-3,3)
	$(call test2,div,100,10,10)

	@echo ' ok'
